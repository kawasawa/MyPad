<UserControl x:Class="MyPad.Views.Regions.MenuBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:p="http://prismlibrary.com/"
             xmlns:m="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mi="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:le="http://wpflocalizeextension.codeplex.com"
             xmlns:qc="http://QuickConverter.CodePlex.com/"
             xmlns:ge="clr-namespace:SourceChord.GridExtra;assembly=GridExtra.Wpf"
             xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:viewModels="clr-namespace:MyPad.ViewModels"
             xmlns:controls="clr-namespace:MyPad.Views.Controls"
             mc:Ignorable="d"
             p:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800">

    <Menu>
        <MenuItem Header="{le:Loc Command_File}">
            <MenuItem Command="{Binding NewCommand, Mode=OneTime}"
                      Header="{le:Loc Command_New}"
                      InputGestureText="Ctrl+N">
                <MenuItem.Icon>
                    <mi:Modern Kind="PageNew"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding NewWindowCommand, Mode=OneTime}"
                      Header="{le:Loc Command_NewWindow}"
                      InputGestureText="Ctrl+Shift+N">
                <MenuItem.Icon>
                    <mi:Modern Kind="New"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding OpenCommand, Mode=OneTime}"
                      Header="{le:Loc Command_Open}"
                      HeaderStringFormat="{}{0}..."
                      InputGestureText="Ctrl+O">
                <MenuItem.Icon>
                    <mi:Material Kind="FolderOpen"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding SaveCommand, Mode=OneTime}"
                      Header="{le:Loc Command_Save}"
                      InputGestureText="Ctrl+S">
                <MenuItem.Icon>
                    <mi:Material Kind="ContentSave"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding SaveAsCommand, Mode=OneTime}"
                      Header="{le:Loc Command_SaveAs}"
                      HeaderStringFormat="{}{0}..."
                      InputGestureText="Ctrl+Shift+S">
                <MenuItem.Icon>
                    <mi:Material Kind="ContentSaveSettings"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding SaveAllCommand, Mode=OneTime}"
                      Header="{le:Loc Command_SaveAll}"
                      InputGestureText="Ctrl+Shift+K">
                <MenuItem.Icon>
                    <mi:Material Kind="ContentSaveAll"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding PrintCommand, Mode=OneTime}"
                      Header="{le:Loc Command_Print}"
                      HeaderStringFormat="{}{0}..."
                      InputGestureText="Ctrl+P">
                <MenuItem.Icon>
                    <mi:Modern Kind="PrinterText"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding PrintPreviewCommand, Mode=OneTime}"
                      Header="{le:Loc Command_PrintPreview}"
                      HeaderStringFormat="{}{0}..."
                      InputGestureText="Ctrl+Shift+P">
                <MenuItem.Icon>
                    <mi:Modern Kind="PageCheck"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Command="Close"
                      Header="{le:Loc Command_Exit}"
                      InputGestureText="Alt+F4">
                <MenuItem.Icon>
                    <mi:Material Kind="Close"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding ExitApplicationCommand, Mode=OneTime}"
                      Header="{le:Loc Command_ExitApplication}"
                      InputGestureText="Ctrl+Alt+F4">
                <MenuItem.Icon>
                    <mi:Material Kind="CloseBox"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{le:Loc Command_Edit}">
            <MenuItem Command="Undo"
                      Header="{le:Loc Command_Undo}">
                <MenuItem.Icon>
                    <mi:Modern Kind="UndoCurve"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Redo"
                      Header="{le:Loc Command_Redo}">
                <MenuItem.Icon>
                    <mi:Modern Kind="RedoCurve"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Command="Cut"
                      Header="{le:Loc Command_Cut}">
                <MenuItem.Icon>
                    <mi:Modern Kind="Scissor"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Copy"
                      Header="{le:Loc Command_Copy}">
                <MenuItem.Icon>
                    <mi:Modern Kind="PageCopy"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Paste"
                      Header="{le:Loc Command_Paste}">
                <MenuItem.Icon>
                    <mi:Modern Kind="ClipboardPaste"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.Delete"
                      Header="{le:Loc Command_Delete}"
                      InputGestureText="Del">
                <MenuItem.Icon>
                    <mi:Material Kind="Eraser"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="SelectAll"
                      Header="{le:Loc Command_SelectAll}">
                <MenuItem.Icon>
                    <mi:Modern Kind="CursorDefault"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{le:Loc Command_Movement}">
                <MenuItem Command="EditingCommands.MoveLeftByWord"
                          Header="{le:Loc Command_MoveLeftByWord}"
                          InputGestureText="Ctrl+Left"/>
                <MenuItem Command="EditingCommands.MoveRightByWord"
                          Header="{le:Loc Command_MoveRightByWord}"
                          InputGestureText="Ctrl+Right"/>
                <MenuItem Command="EditingCommands.MoveToLineStart"
                          Header="{le:Loc Command_MoveToLineStart}"
                          InputGestureText="Home"/>
                <MenuItem Command="EditingCommands.MoveToLineEnd"
                          Header="{le:Loc Command_MoveToLineEnd}"
                          InputGestureText="End"/>
                <MenuItem Command="EditingCommands.MoveUpByPage"
                          Header="{le:Loc Command_MoveUpByPage}"
                          InputGestureText="PageUp"/>
                <MenuItem Command="EditingCommands.MoveDownByPage"
                          Header="{le:Loc Command_MoveDownByPage}"
                          InputGestureText="PageDown"/>
                <MenuItem Command="EditingCommands.MoveToDocumentStart"
                          Header="{le:Loc Command_MoveToDocumentStart}"
                          InputGestureText="Ctrl+Home"/>
                <MenuItem Command="EditingCommands.MoveToDocumentEnd"
                          Header="{le:Loc Command_MoveToDocumentEnd}"
                          InputGestureText="Ctrl+End"/>
            </MenuItem>
            <MenuItem Header="{le:Loc Command_Selection}">
                <MenuItem Command="EditingCommands.SelectLeftByWord"
                          Header="{le:Loc Command_SelectLeftByWord}"
                          InputGestureText="Ctrl+Shift+Left"/>
                <MenuItem Command="EditingCommands.SelectRightByWord"
                          Header="{le:Loc Command_SelectRightByWord}"
                          InputGestureText="Ctrl+Shift+Right"/>
                <MenuItem Command="EditingCommands.SelectToLineStart"
                          Header="{le:Loc Command_SelectToLineStart}"
                          InputGestureText="Shift+Home"/>
                <MenuItem Command="EditingCommands.SelectToLineEnd"
                          Header="{le:Loc Command_SelectToLineEnd}"
                          InputGestureText="Shift+End"/>
                <MenuItem Command="EditingCommands.SelectUpByPage"
                          Header="{le:Loc Command_SelectUpByPage}"
                          InputGestureText="Shift+PageUp"/>
                <MenuItem Command="EditingCommands.SelectDownByPage"
                          Header="{le:Loc Command_SelectDownByPage}"
                          InputGestureText="Shift+PageDown"/>
                <MenuItem Command="EditingCommands.SelectToDocumentStart"
                          Header="{le:Loc Command_SelectToDocumentStart}"
                          InputGestureText="Ctrl+Shift+Home"/>
                <MenuItem Command="EditingCommands.SelectToDocumentEnd"
                          Header="{le:Loc Command_SelectToDocumentEnd}"
                          InputGestureText="Ctrl+Shift+End"/>
            </MenuItem>
            <MenuItem Header="{le:Loc Command_Formatting}">
                <MenuItem Command="controls:TextEditorCommands.ConvertToNarrow"
                          Header="{le:Loc Command_ConvertToNarrow}"/>
                <MenuItem Command="controls:TextEditorCommands.ConvertToWide"
                          Header="{le:Loc Command_ConvertToWide}"/>
                <Separator/>
                <MenuItem Command="ae:AvalonEditCommands.ConvertToLowercase"
                          Header="{le:Loc Command_ConvertToLowerCase}"/>
                <MenuItem Command="ae:AvalonEditCommands.ConvertToUppercase"
                          Header="{le:Loc Command_ConvertToUpperCase}"/>
                <MenuItem Command="ae:AvalonEditCommands.ConvertToTitleCase"
                          Header="{le:Loc Command_ConvertToTitleCase}"/>
                <Separator/>
                <MenuItem Command="ae:AvalonEditCommands.ConvertTabsToSpaces"
                          Header="{le:Loc Command_ConvertTabsToSpaces}"/>
                <MenuItem Command="ae:AvalonEditCommands.ConvertSpacesToTabs"
                          Header="{le:Loc Command_ConvertSpacesToTabs}"/>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{le:Loc Command_Find}">
            <MenuItem Command="Find"
                      Header="{le:Loc Command_Find}">
                <MenuItem.Icon>
                    <mi:Material Kind="Magnify"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ae:SearchCommands.FindNext"
                      Header="{le:Loc Command_FindNext}">
                <MenuItem.Icon>
                    <mi:Modern Kind="MagnifyArrowDown"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ae:SearchCommands.FindPrevious"
                      Header="{le:Loc Command_FindPrev}">
                <MenuItem.Icon>
                    <mi:Modern Kind="MagnifyArrowUp"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Replace"
                      Header="{le:Loc Command_Replace}">
                <MenuItem.Icon>
                    <mi:Material Kind="FindReplace"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding GoToLineCommand, Mode=OneWay}"
                      Header="{le:Loc Command_GoToLine}"
                      HeaderStringFormat="{}{0}..."
                      InputGestureText="Ctrl+G">
                <MenuItem.Icon>
                    <mi:Modern Kind="PageArrow"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{le:Loc Command_View}">
            <MenuItem Command="{Binding SwitchFullScreenModeCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                      Header="{le:Loc Command_SwitchFullScreenMode}"
                      InputGestureText="F11">
                <MenuItem.Icon>
                    <mi:Modern Kind="Fullscreen"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem IsCheckable="True" IsChecked="{Binding Topmost, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=TwoWay}" Header="{le:Loc Command_Topmost}"/>
            <MenuItem IsCheckable="True" IsChecked="{Binding SettingsService.System.ShowMenuBar,   Mode=TwoWay}" Header="{le:Loc Command_ShowMenuBar}"/>
            <MenuItem IsCheckable="True" IsChecked="{Binding SettingsService.System.ShowToolBar,   Mode=TwoWay}" Header="{le:Loc Command_ShowToolBar}"/>
            <MenuItem IsCheckable="True" IsChecked="{Binding SettingsService.System.ShowStatusBar, Mode=TwoWay}" Header="{le:Loc Command_ShowStatusBar}"/>
            <MenuItem Header="{le:Loc Command_Zoom}">
                <MenuItem Command="controls:TextEditorCommands.ZoomIn"
                          Header="{le:Loc Command_ZoomIn}"
                          InputGestureText="Ctrl+Plus">
                    <MenuItem.Icon>
                        <mi:Material Kind="MagnifyPlusOutline"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="controls:TextEditorCommands.ZoomOut"
                          Header="{le:Loc Command_ZoomOut}"
                          InputGestureText="Ctrl+Minus">
                    <MenuItem.Icon>
                        <mi:Material Kind="MagnifyMinusOutline"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="controls:TextEditorCommands.ZoomReset"
                          Header="{le:Loc Command_ZoomReset}"
                          InputGestureText="Ctrl+0"/>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{le:Loc Command_Tools}">
            <MenuItem Command="{Binding OptionCommand, Mode=OneTime}"
                      Header="{le:Loc Command_Option}"
                      HeaderStringFormat="{}{0}..."
                      InputGestureText="Ctrl+,">
                <MenuItem.Icon>
                    <mi:Modern Kind="Cog"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding ChangeEncodingCommand, Mode=OneTime}"
                      Header="{le:Loc Command_ChangeEncoding}"
                      HeaderStringFormat="{}{0}..."
                      InputGestureText="Ctrl+M">
                <MenuItem.Icon>
                    <mi:Material Kind="Alphabetical"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding ChangeSyntaxCommand, Mode=OneTime}"
                      Header="{le:Loc Command_ChangeSyntax}"
                      HeaderStringFormat="{}{0}..."
                      InputGestureText="Ctrl+Shift+M">
                <MenuItem.Icon>
                    <mi:Material Kind="LanguageCsharp"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="controls:TextEditorCommands.Completion"
                      Header="{le:Loc Command_Completion}">
                <MenuItem.Icon>
                    <mi:Material Kind="AutoFix"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Command="{Binding DiffCommand, Mode=OneTime}"
                      Header="{le:Loc Command_Diff}"
                      HeaderStringFormat="{}{0}..."
                      InputGestureText="Ctrl+Shift+D">
                <MenuItem.Icon>
                    <mi:Material Kind="FileCompare"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="{Binding DiffUnmodifiedCommand, Mode=OneTime}"
                      Header="{le:Loc Command_DiffUnmodified}"
                      HeaderStringFormat="{}{0}...">
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{le:Loc Command_Help}">
            <MenuItem Command="{Binding AboutCommand, Mode=OneTime}"
                      Header="{le:Loc Command_About}"
                      HeaderStringFormat="{}{0}...">
                <MenuItem.Icon>
                    <mi:Modern Kind="InformationCircle"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
    </Menu>

</UserControl>
