<UserControl x:Class="MyPad.Views.Regions.MaintenanceContentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:p="http://prismlibrary.com/"
             xmlns:m="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mi="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:le="http://wpflocalizeextension.codeplex.com"
             xmlns:qc="http://QuickConverter.CodePlex.com/"
             xmlns:ge="clr-namespace:SourceChord.GridExtra;assembly=GridExtra.Wpf"
             xmlns:lcw="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d" 
             p:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800"
             Cursor="{qc:Binding '$P ? Cursors.Wait : Cursors.Arrow', P={Binding IsWorking.Value, Mode=TwoWay}}"
             IsVisibleChanged="UserControl_IsVisibleChanged">

    <Grid Margin="20 0 20 20">
        <TabControl Padding="5 10 0 0" m:HeaderedControlHelper.HeaderFontWeight="Bold">
            <TabControl.Resources>
                <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource Default.DataGrid}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
                <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource Default.Expander}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
                <Style TargetType="{x:Type lcw:CartesianChart}" BasedOn="{StaticResource Default.CartesianChart}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </TabControl.Resources>

            <!-- ********** ログビューワー ********** -->
            <TabItem Header="{le:Loc Label_LogViewer}">
                <Grid>
                    <TabControl TabStripPlacement="Bottom" m:HeaderedControlHelper.HeaderFontWeight="Bold" m:HeaderedControlHelper.HeaderFontSize="10">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource Default.DataGrid}">
                                <Setter Property="AutoGenerateColumns" Value="False"/>
                                <Setter Property="HeadersVisibility" Value="Row"/>
                                <Setter Property="RowHeaderWidth" Value="50"/>
                                <Setter Property="ColumnWidth" Value="*"/>
                            </Style>
                        </TabControl.Resources>
                        <TabItem Header="Trace">
                            <DataGrid ItemsSource="{Binding TraceLogs, Mode=OneWay}" LoadingRow="{qc:QuickEvent '$eventArgs.Row.Header = ($eventArgs.Row.GetIndex() + 1).ToString()'}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Mode=OneWay}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                        <TabItem Header="Debug">
                            <DataGrid ItemsSource="{Binding DebugLogs, Mode=OneWay}" LoadingRow="{qc:QuickEvent '$eventArgs.Row.Header = ($eventArgs.Row.GetIndex() + 1).ToString()'}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Mode=OneWay}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                        <TabItem Header="Info">
                            <DataGrid ItemsSource="{Binding InfoLogs, Mode=OneWay}" LoadingRow="{qc:QuickEvent '$eventArgs.Row.Header = ($eventArgs.Row.GetIndex() + 1).ToString()'}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Mode=OneWay}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                        <TabItem Header="Warn">
                            <DataGrid ItemsSource="{Binding WarnLogs, Mode=OneWay}" LoadingRow="{qc:QuickEvent '$eventArgs.Row.Header = ($eventArgs.Row.GetIndex() + 1).ToString()'}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Mode=OneWay}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                    </TabControl>

                    <Button Command="{Binding ExportLogArchiveCommand, Mode=OneTime}" Style="{StaticResource Common.CircleButton}" ToolTip="{le:Loc Command_ExportLog}" Margin="0 -40 30 0" HorizontalAlignment="Right" VerticalAlignment="Top" IsTabStop="False">
                        <mi:Material Kind="ArchiveArrowDown"/>
                    </Button>
                </Grid>
            </TabItem>

            <!-- ********** パフォーマンス ********** -->
            <TabItem Header="{le:Loc Label_PerformanceMonitor}">
                <Grid ge:GridEx.RowDefinition="Auto, 5, *, 15, Auto, 5, *">
                    <Grid.Resources>
                        <Style TargetType="{x:Type lcw:LineSeries}">
                            <Setter Property="StrokeThickness" Value="2"/>
                            <Setter Property="LineSmoothness" Value="0"/>
                            <Setter Property="PointGeometrySize" Value="0"/>
                        </Style>
                        <Style TargetType="{x:Type lcw:Axis}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </Style>
                    </Grid.Resources>

                    <TextBlock Grid.Row="0" Text="CPU usage"/>
                    <lcw:CartesianChart Grid.Row="2" Hoverable="False" DataTooltip="{x:Null}">
                        <lcw:CartesianChart.AxisX>
                            <!--a small visual improvement, lets hide the first points (x = 0, x=1) to get better animations-->
                            <lcw:Axis MinValue="2" ShowLabels="False"/>
                        </lcw:CartesianChart.AxisX>
                        <lcw:CartesianChart.AxisY>
                            <lcw:Axis MinValue="0" MaxValue="100"/>
                        </lcw:CartesianChart.AxisY>
                        <lcw:CartesianChart.Series>
                            <lcw:LineSeries Values="{Binding CpuUsage, Mode=OneWay}" Stroke="{DynamicResource BlueColorBrush}">
                                <lcw:LineSeries.Fill>
                                    <SolidColorBrush Color="{DynamicResource BlueColorKey}" Opacity="0.2"/>
                                </lcw:LineSeries.Fill>
                            </lcw:LineSeries>
                        </lcw:CartesianChart.Series>
                    </lcw:CartesianChart>

                    <TextBlock Grid.Row="4" Text="Memory usage"/>
                    <lcw:CartesianChart Grid.Row="6" Hoverable="False" DataTooltip="{x:Null}">
                        <lcw:CartesianChart.AxisX>
                            <!--a small visual improvement, lets hide the first points (x = 0, x=1) to get better animations-->
                            <lcw:Axis MinValue="2" ShowLabels="False"/>
                        </lcw:CartesianChart.AxisX>
                        <lcw:CartesianChart.AxisY>
                            <lcw:Axis MinValue="0"/>
                        </lcw:CartesianChart.AxisY>
                        <lcw:CartesianChart.Series>
                            <lcw:LineSeries Values="{Binding MemoryUsage, Mode=OneWay}" Stroke="{DynamicResource PurpleColorBrush}">
                                <lcw:LineSeries.Fill>
                                    <SolidColorBrush Color="{DynamicResource PurpleColorKey}" Opacity="0.2"/>
                                </lcw:LineSeries.Fill>
                            </lcw:LineSeries>
                        </lcw:CartesianChart.Series>
                    </lcw:CartesianChart>
                </Grid>
            </TabItem>
        </TabControl>

        <Border d:IsHidden="True" Style="{StaticResource App.Overlay}" Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed', P={Binding IsWorking.Value, Mode=OneWay}}">
            <StackPanel Margin="5 0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                <TextBlock Text="{le:Loc Text_Working}" HorizontalAlignment="Center" TextAlignment="Center"/>
                <Border Height="10"/>
                <m:ProgressRing/>
            </StackPanel>
        </Border>
    </Grid>

</UserControl>
